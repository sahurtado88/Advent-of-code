def count_xmas(grid):
    rows = len(grid)
    cols = len(grid[0])
    xmas_count = 0

    # Función que verifica si hay un "MAS" en una dirección específica
    def is_mas(row, col, dr, dc):
        return (0 <= row + 2 * dr < rows and
                0 <= col + 2 * dc < cols and
                grid[row][col] == 'M' and
                grid[row + dr][col + dc] == 'A' and
                grid[row + 2 * dr][col + 2 * dc] == 'S')

    # Buscamos el patrón "X-MAS"
    for row in range(1, rows - 1):  # Comienza en 1 y termina en rows-1 para evitar los bordes
        for col in range(1, cols - 1):  # Comienza en 1 y termina en cols-1 para evitar los bordes
            # El centro de la "X" debe ser una 'A'
            if grid[row][col] == 'A':
                # Verificamos las dos diagonales de la "X"
                top_left = is_mas(row - 1, col - 1, -1, -1)
                bottom_right = is_mas(row + 1, col + 1, 1, 1)
                top_right = is_mas(row - 1, col + 1, -1, 1)
                bottom_left = is_mas(row + 1, col - 1, 1, -1)

                # Si ambas diagonales se alinean correctamente, contamos un patrón "X-MAS"
                if top_left and bottom_right:
                    xmas_count += 1
                if top_right and bottom_left:
                    xmas_count += 1

    return xmas_count


# Grid de entrada proporcionado
grid = [
    ".M.S......",
    "..A..MSMS.",
    ".M.S.MAA..",
    "..A.ASMSM.",
    ".M.S.M....",
    "..........",
    "S.S.S.S.S.",
    ".A.A.A.A..",
    "M.M.M.M.M.",
    ".........."
]

# Limpiamos el grid, reemplazando caracteres irrelevantes por '.'
processed_grid = [[ch if ch in "MAS" else '.' for ch in row] for row in grid]

# Contamos los patrones "X-MAS"
result = count_xmas(processed_grid)
print(f"Número de patrones X-MAS: {result}")
