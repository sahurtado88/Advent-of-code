def count_xmas(grid):
    rows = len(grid)
    cols = len(grid[0])
    xmas_count = 0

    # Verifica si hay un "MAS" en la dirección de las diagonales
    def is_mas(row, col, dr, dc):
        # Comprobamos que las coordenadas no se salgan del grid
        if 0 <= row + 2 * dr < rows and 0 <= col + 2 * dc < cols:
            return (grid[row][col] == 'M' and
                    grid[row + dr][col + dc] == 'A' and
                    grid[row + 2 * dr][col + 2 * dc] == 'S')
        return False

    # Recorremos todo el grid
    for row in range(1, rows - 1):  # Empieza en 1 y termina en rows - 1 para evitar los bordes
        for col in range(1, cols - 1):  # Empieza en 1 y termina en cols - 1 para evitar los bordes
            # Comprobamos si el punto central es 'A'
            if grid[row][col] == 'A':
                # Verificamos las dos posibles diagonales para encontrar una "X-MAS"
                if (is_mas(row - 1, col - 1, -1, -1) and is_mas(row + 1, col + 1, 1, 1)) or \
                   (is_mas(row - 1, col + 1, -1, 1) and is_mas(row + 1, col - 1, 1, -1)):
                    xmas_count += 1

    return xmas_count

# Entrada del grid
grid = [
    ".M.S......",
    "..A..MSMS.",
    ".M.S.MAA..",
    "..A.ASMSM.",
    ".M.S.M....",
    "..........",
    "S.S.S.S.S.",
    ".A.A.A.A..",
    "M.M.M.M.M.",
    ".........."
]

# Convertimos caracteres irrelevantes a '.'
processed_grid = [[ch if ch in "MAS" else '.' for ch in row] for row in grid]

# Contamos el número de patrones "X-MAS"
result = count_xmas(processed_grid)
print(f"Número de patrones X-MAS: {result}")
